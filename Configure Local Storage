
Divide a storage device is called partitioning

check partitions in linux
lsblk 
to be a partition in the output must show part ion the type column
virtual machines storages devices typically begin with V
s SATA
nvme  NVMe


sudo fdisk --list /dev/sda

fdisk pre installed partitioning utility. This command shows a list of partitions on this block
storage devices is divided into sectors
check the partition  and with the number in start column multiple with the sector size it will have the Sectors column which will be the size, this
means that the partition has the size of free space before that sectors 0 to 2047 (2047 for example is the number shown in the Start column)
it is good to leave at least 1G free for bootloader in case needs to be install in that area. This method is MBR


Create a partition --------------------------------------
sudo cfdisk /dev/sdb

GPT less likely to be corrupted and many more primary partitions and use much larger partitions
gpt = gpt
dos = mbr

can select swap space


Configure and manage swap space =================================================

swap area wher linux can temporarily move some data from the computer RAM
when you open a program and it is just there doing nothin and you want to open a browser, even doesnt have enough memory, linux
will move the memory used in the program, which you havent done much, and move the memory to swap partition.

to check if the system uses any kindof swap areas
swapon --show

to make a partition be a swap area
sudo mkswap /dev/vdb3   (check first with the command lsblk)
sudo swapon --verbose /dev/vdb3

But if you reboot the system the partition wont be used as swap
sudo swapoff /dev/vdb3   stop using the partition as swap
create a  file with empty zeros
sudo dd if=/dev/zero of=/swap bs=1M count=128 status=progress
dd will copy the if file to of, count means to qrite 1 megabyte block 128 times. it will be 128Megabytes

make sure so set proper permissions
sudo chmod 600 /swap

then
sudo  mkswap /swap
sudo swapon --verbose /swap


Manage and configure LVM storage ===================================================================================
lvm = logical volume manager
free spaces in multiple portions of disk or if we have multiple discs that we would like to combine together

man lvm
check some commands can type
vg in the terminal
pv
it will show a list of commands

sudo dnf install lvm2
pb - physical volumes
 sudo lvmdiskscan
 sudo pvcreate /dev/sdc /dev/sdd
 sudo pvs
 sudo vgcreate <type_any_name_for_groupname> /dev/sdc /dev/sdd
 sudo vgextend  <type_groupname> /dev/sde          to extend the volume group
 sudo vgs       list volumes groups
 sudo vgreduce  <type_groupname>   /dev/sde   to remove a physical volume
 sudo pvremove /dev/sde           to remove entirely from lvm
 sudo lvcreate --size 2G --name partition1  <type_groupname>         need to add a partition, need to add a logical volume 
 sudo lvresize --extents 100%VG  my_volume/partition1               to grow the logical volume after partition the disk
 sudo lvresize --size 2G   my_volume/partition1               to shrink
 sudo lvdisplay             check the lv and pv
 sudo mkfs.xfs   /dev/<type_groupname>/partition1                to store files and dir on a logical volume we need a filesystem
 sudo lvresize --resizefs --size 3G <type_groupname>/partition1             to resize a logical volume with the filesystem, they CANNOT SHRINK
 
 
 Create and configure encrypted storage ===================================================================================
 
 plane mode - we need to open the device 
 sudo cryptsetup --verify-passphrase open --type plain /dev/vde mysecuredisk
 open is to open the device for reading encrypted data from it and writing encrypted data to it
 mysecuredisk is the name of the disk you want
 --verify-passphrase is to type twice the passwor,because the plane mode doesnt check if the password is not correct
 
 it will be saved in /dev/mapper/mysecuredisk
 act like a disk, which you can mount, create file system 
 sudo mkfs.xfs /dev/mapper/mysecuredisk
 sudo mount /dev/mapper/mysecuredisk /mnt
 it is important to close otherwise can be readable in /dev/mapper
 sudo umount /mnt
 sudo cryptsetup close mysecuredisk
 
 LUKS - need format the storage and open
 another way to encypt and easier. Format the disk or partition we intend to use with linux encryption
 sudo cryptsetup luksFormat /dev/vde
 sudo cryptsetup luksChangeKey /dev/vde      change the password the encryption key
 once formatted can open using
 sudo cryptsetup open /dev/vde mysecuredisk
 we dont need specify the type of encryption when we format a device with Luks that writes a very small block of data to the storage
 called header
 sudo mkfs.xfs /dev/mapper/mysecuredisk
 sudo cryptsetup close mysecuredisk
 sudo cryptsetup luksFormat /dev/vde2        to encrypt part of the disk, only the partition
 sudo cryptsetup open /dev/vde2 mysecuredisk
