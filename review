
  ======================================             Essential Tools                    ===================================================================


save all command output (both errors/warnings and normal output
sudo ./script.sh > /home/bob/output.txt 2>&1 
#
id  uid,gid,...
#
who  users log in the current system
#
last  show the logged in users
#
su -  switch users, this requires the password for the user you are switching to
#
sudo  better option for su, prompt to type the user is logged in. Default conf (/etc/sudoers), this can be update using visudo
#
under /etc/sudoers  for users to run specific commands: user localhost=/usr/bin/shutdown -r now
                    can set up shell /usr/bin/nologin -> this means noone can login into the system using root user and password directly
                              
   the number 3 in brackets is user:group that first field can run the command

bob = ALL(ALL:ALL) ALL
bob - user
%bob - group
ALL (column 2) - localhost
ALL:ALL - user:group
ALL (column 4) - command, could be /usr/bin/shutdown -r now; /bin/ls; etc


absolute path always start with the /
  relative example you are /home/user and want to move to /var/log -> cd /var/log
  

when copy it is a good practice to terminate with / whne it is directory
#
cp file.txt dir/
cp file.txt dir ->this dir could be a file
cp -r (recursive - it will copy the directory (including all its contents)) cp -r /tmp/Invoice /home/user   It will have /home/user/Invoice/files
cp -r Copy/ Paste/  with the paste dir already exist it will be under Paste/ this Paste/Copy/files and dir
                    with the paste dir doesnt exist it will be under Paste/ this Paste/files and dir
when use move command mv, doesnt need to use the flag -r
cp -a  (keep the attributes) - to learn more read this - https://medium.com/for-linux-users/linux-file-attributes-made-easy-8d100c0a5813
(to deal with the attributes of the files install the package sudo yum install e2fsprogs)
lsattr myfile.txt 
--------------e----- myfile.txt


#
rm -r to delete directories
  
#  
 mkdir and subdirectories ( -p flag)
 mkdir -p /tmp/1/2/3/4/5/6/7/8/9

Move all content of
#
mv /home/bob/dir/* /home/bob/new-dir/

list full time
#
ls --full-time


===================================================== Hostnamectl & /etc/hostname

If you wish to permanently change the hostname without rebooting your computer, use the hostnamectl command

#
hostnamectl set-hostname name
#
hostnamectl set-hostname -H [username]@hostname
#
hostanamectl status
#
sudo vi /etc/hostname


==================================================== APROPOS 

If the apropos command does not work because your manual pages are not indexed
Getting this message "nothing appropriate."

#
mandb
#
apropos "nfs mount"

check manuals programs packages installed on the system /usr/share/doc


=================================================== SOFT LINKS
 
 
 soft link points to a path, like a shortcut
 
 ln -s /home/user/Pictures/picture.jpg /home/user/Desktop/pictures_shortcut.jpg
 ln -s /tmp /home/bob/link_to_tmp
 
 when you list ls -l it will show the " L " at the beginning like:  lrwx------
 
 can use the command below to check the path link
 readlink pictures_shortcut.jpg
 
 if someone does change can break the link and it will be show in red when listed. to tackle that use relative paths to direct to the file 
 and not the file itself, because if someone delete it wont work the link
 
 can soft link files, directories, can be in different file systems


===================================================   HARD LINKS   - INODE 

A "hard link" is a directory entry that points to the same data on disk as a directory entry somewhere else.

stat /home/user/picture.jpg
it will show the inode. Inode remember all the pieces are store and keeps track like permissions, when modified, etc
links. usually you have one link which it will link the absolute path file to the inode

in case for example another user want to see the picture, you dont need copy and paste. This saves resource storage

ln path_to_target_file path_to_link_file
path_to_target_file - file you want to link
path_to_link_file - name of the new directory you want the pictures be copied

ln /home/user/Pictures/picture.jpg /home/new_user/Pictures/picture.jpg
ln /tmp/hlink /home/bob/hlink

if the user delete his file the new user still can have access to the pictures

limitations
  only for files, not directories
  only link on the same file system
  make sure has right permissions, the example above we might add the user and new_user to the same group ( useradd -a -G family user ,  useradd -a -G family new_user)

Verify Hard links
Use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number. 


================================================================= FIND


#
find /opt/assets/ -type f -exec grep -Iq . {} \; -print        find file that contains text, when the others are empty
#
find /opt/assets -type f -perm 2664 -exec cp -p {} /home/bob/specialfiles/ \;


SUID - 4
SGID - 2
Sticky bit - 1
-exec <command> {} \;
      find will execute <command> and will substitute {} with the filename(s) found. 
      with ; a single <command> for each file is executed 
      escaped here as \; to prevent the shell from interpreting it

{} \; : executing the commands for each found result
{} + : executing the command once with all results argument like this -> ls file1.txt file2.txt file3.txt  


find /path -name file.txt
find /path -iname file.txt              -case sensitive
find -mmin        modified minute (modified means creation or editing a file) Modified means when the contens have been modified
find -mmin 5      5 min ago (if now is 11:00 it will find files in 10:55)
find -mmin -5     5 min ago (if now is 11:00 it will find files BETWEEN 10:55 until 11:00)
find -mmin +5     list files before 5 min ago (if now is 11:00 it will find files from 10:55 to the infinite 10:45, 10:30, 9:30, etc)
  
find -mtime 0     search for files per days or past-24hours periods
0 past 24 hours
1 24h to 48h
  
created
find -cmin -5   created last 5 minutes
  
find -size
c bytes
k kilobytes
M megabytes
G gigabytes
  
find -size 512k       = 512
find -size +512k      > 512
find -size -512k      < 512
                            
sudo find /usr -type f -size +5M -size -10M           Find all files between 5mb and 10mb in the /usr directory
             
find -perm 664       exactly perm
find -perm -664       find bearly perm  
find -perm -u=rw,g=rw,o=r       find bearly perm                          
find -perm /664       find files with any of these perm                          
                             
find -name "f*" -size 512k          AND operator                     
find -name "f*" -o -size 512k       OR operator  
find -not -name "f*"                NOT operator
 
Find files/directories under /var/log/ directory that the group can write to, but others cannot read or write to
sudo find /var/log/ -perm -g=w ! -perm /o=rw                          
! expr : True if ‘expr’ is false.
not to be r or w. That means, if any of these two permissions, r or w match for others, the result has to be excluded
  
  
================================================ CHMOD  - SETUID, SETGID, STICKY BIT


[S ; s (with x)] SETUID -  makes an executable run with the privileges of the owner of the file
[S ; s (with x)]SETGID -  makes an executable run with the privileges of the group of the file.
[T ; t (with x)] STICKY BIT - This permission does not affect individual files. At the directory level, it restricts file deletion. 
                              Only the owner (and root) of a file can remove the file within that directory.

4 - r
2 - w
1 - x

u - user (owner)
g - group
o - other 
a - all (u, g, and o)

sudo chmod g+rw
sudo chmod u-w
chmod go+rw 


=================================================================== HEAD, TAIL, TAC


  tac file.txt   -> will see bottom to top  inside the file which is small
  
  cat file.txt    -> top to bottom inside the file which is small
  
  tail file.txt   ->  will see bottom to top  inside the file which is large, default is 10 lines
  
  tail -n 20 file.txt ->  will see bottom to top  inside the file which is large, shows 20 lines
  
  head file.txt   ->  will see top to bottom  inside the file which is large, default is 10 lines
  
  head -n 20 file.txt ->  will see top to bottom   inside the file which is large, shows 20 lines
  
  head -5 file.txt  ->  will see top to bottom   inside the file which is large, shows 5 lines
  
  
 ===================================================================  SED 
  
  sed 's/old_string/new_string/g' file.txt
  s -> substitute
  g -> global replace
  
  sed -i 's/old_string/new_string/g' file.txt
  -i -> will edit the file, it will swap the strings
  
  sed -i 's/disabled/enabled/gi'
  gi - ignore case sensitive. For example, any string like disabled, DISABLED, Disabled
  
  
  Change all values enabled to disabled only from line number 500 to 2000.
  
  sed -i '500,2000s/enabled/disabled/g' file
  
  Replace all occurrence of string #%$2jh//238720//31223 with $2//23872031223 i
  
  sed -i 's~#%$2jh//238720//31223~$2//23872031223~g' file
  
  
  
=================================================================== DIFF

analyze files, see the differences between them 
for the flags is good to look at diff --help

diff file1 file2
diff -c file1 file2 
diff -y file1 file2  (side by side)
sdiff -y file1 file2  (side by side)  



=================================================================== CUT

 cut -d ';' -f 2 testfile
 cut -d ' ' -f 1 file.txt    first column that appears on each line
 d - delimiter
 ' ' -> words are separated by space, ',' words separated by comma
 f -> fields we want extract
 

=================================================================== GREP 


egrep -w '[A-Z][a-z]{2}' /etc/nsswitch.conf           starts with a capital letter and are then followed by exactly two lowercase letters  
grep -r [A-Z,a-z] /opt/assets/                        find file that contains text, when the others are empty. And also print the content
egrep '[0-9]{5}' textfile                             file there's a number that has 5 digits
grep -c '^2' textfile                                 how many numbers begin with a number 2
grep -ic '^SECTION' testfile                          how many lines begin with string Section
grep -w man testfile                                  match the only word
grep -o 'string' /path                                output it will show only the word
grep '^start' file                                    begin with start
grep man file                                         any word with man. Like man, manpath, manual
grep 'man$' file                                      $ - end of the line. Any line in which man is the last character on the line.
grep -r 'c.t' /etc                                    execute, cat, cut
grep -wr 'c.t' /etc/                                  cat, cut, cpt
grep '\.' file                                        to search for DOT in a file
grep '/.*/' /etc/                                     to search anything with /bla/, / /, /path/hello
egrep 'disabled?' file                                will search for disabled, disable
egrep 'disabled|enabled' file                         match one thing or the other

to avoid to use \ and get confuse with . and so on. It is good practice to use grep -E or egrep

egrep -r '0{3,}' /path/                              to find at least 3 zeros 
egrep -r '0{3}' /path/                               exactly 3 zeros
egrep -r '0{3,5}' /path/                             range of zeros
 


-c : count
-i : ignore string case
-w : exactly word
-r : recursive search


================================================================ TAR / STAR
 
 create an archive requires 3 steps
    Archiving - pack those files and dir into a single file backup.tar
    Compress the archive (makes smaller size of the original) backup.tar.gz
    Copy where you would keep your backup
  
before extract always check the content and the paths  
archive also store permissions and ownership info
 
 best way to use this utility is using tar --help
 
 #
 
 tar rf archive.tar file1    add a file to tar archive
 tar cf archive.tar Pictures/  create a tar file with entirely directory content to archive
 tar cf archive.tar /home/user/Pictures/  the content it be save with the path /home/user/Pictures/
 tar xf archive.tar -C /tmp/      it will extract in the path given
 sudo tar xf archive.tar -C /tmp/      it will extract in the path given and the ownership and permission it will be preserved
 star -zc -f=/home/bob/backup.star.gz ~/files
 
 z - gzip
 bz - bzip
 c - create
 f= - file
 t - list content in .start.gz              star -t -f=backup.star.gz
 
 tar cfj /home/bob/asset_backup.tar.bz2 --absolute-names /opt/assets/

create an archive requires 3 steps
  Archiving - pack those files and dir into a single file backup.tar
  Compress the archive (makes smaller size of the original) backup.tar.gz
  Copy where you would keep your backup
  
before extract always check the content and the paths  
archive also store permissions and ownership info


===================================              Operate Running Systems                         ======================================

===================================================  Boot, reboot, and shutdown a system safely


systemctl - system control

sudo systemctl restart <service>

sudo systemctl reboot
sudo systemctl poweroff

sudo systemctl reboot --force
sudo systemctl poweroff --force

to "press" reset button
sudo systemctl reboot --force --force

"unplug" the system
sudo systemctl poweroff --force --force

to schedule a time to reboot or/and shutdown
sudo shutdown 02:00   (2am)
sudo shutdown +15     in 15min shutdown
sudo shutdown -r 02:00    reboot -r
sudo shutdown -r +15      reboot in 15min
sudo shutdown -r +1 'Shceduled restart to do an offline-backup of our database'  -  single quotes, message to tell the user a message before reboot/shutdown
sudo shutdown -c    to cancel shutdown


===================================================  Boot or change system into different operating modes


system's current default boot target can be basic.target, graphical.target , etc

to check our default boot
systemcl get-default
graphical.target

#
systemctl get-default
systemctl set-default
ls -l /usr/lib/systemd/system/

sudo systemctl set-default multi-user.target  
sudo systemctl isolate graphical.target  (temporary gives a graphical prompt, after reboot back to the default you set to boot)
sudo systemctl isolate emergency.target   (for troubleshooting, read permissions, few system are loaded). You must have root password
sudo systemctl isolate rescue.target      (root permission, there will be more programs than emergency). You must have root password

systemd targets
Targets in systemd act as synchronization points during the start of your system.
The purpose of target units is to group together various systemd units through a chain of dependencies.
The graphical.target unit for starting a graphical session, starts system services such as the GNOME Display Manager 
(gdm.service) or Accounts Service (accounts-daemon.service), 
and also activates the multi-user.target unit.

basic
unit target covering basic boot-up

rescue
unit target that pulls in the base system and spawns a rescue shell

multi-user
unit target for setting up a multi-user system

graphical
unit target for setting up a graphical login screen

emergency
unit target that starts an emergency shell on the main console. provides the most minimal environment possible and allows you to repair your system even 
in situations when the system is unable to enter rescue mode. In emergency mode, the system mounts the root file system only for reading, 
does not attempt to mount any other local file systems, does not activate network interfaces, and only starts a few essential services.

sysinit
unit target that pulls in the services required for system initialization


===========================================================  Interrupt the boot process in order to gain access to a system 

When the PC is start, press down when you see the grub boot screen and chose one of the kernel and press E
at the bottom type rd.break. When boot it will be in the emergency mode
this command can help when you lost the root password on RHEL8
mount -o remount rw /sysroot
cd /sysroot
chroot /sysroot
passwd root
touch /.autorelabel -hidden file in the root dir
reboot
exit

on RHEL9
When the PC is start, press down when you see the grub boot screen and chose one of the kernel and press E
at the second line after r\o and before crashkernel
change r\o to r\w
ctrl + e - to go to end of line
init=/bin/bash
ctrl + x
passwd (after reboot, in the terminal as root)
touch /.autorelabel -hidden file in the root dir. this fix the SELinux config
exec /sbin/init


===================================================================   Install, configure and troubleshoot bootloaders


On a system booting through legacy BIOS mode, what file would you edit before generating a new grub configuration file
/etc/default/grub

what command would you use to generate the new grub configuration file
grub2-mkconfig -o /boot/grub2/grub.cfg

one of the programs that loads up when turn on the computer it is a bootloader, this is to start the linux kernel
popular bootloader on linux is the GRUB

problem with the bootloader so the OS wont boot at all. We can use an USB sticky and boot from there using troubleshooting
then select - Rescue a CentOS Stream system 
choose option 1
chroot /mnt/sysroot
grub2-mkconfig -o /boot/grub2/grub.cfg   - generate a GRUB conf file when you have BIOS
grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg   - generate a GRUB conf file when you have EFI

Install grub to /dev/vda
#
lsblk - need to set the grub at the beginning of the disk, first check the block device (check for sd or vd), look for /boot, /
grub2-install /dev/sda
dnf resinstall grub2-efi grub2-efi-modules shim (this is for EFI only)
exit


change GRUB conf
sudo vim /etc/default/grub
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg - this is only for EFI
sudo systemctl reboot


========================================================================== Diagnose and manage processes

man ps   -then type /EXAMPLES

ps a is different than ps -a

ps will show programs launched in our current terminal window or session

ps aux -display all process in the machine. 
        ax show all process
        u list processes in a user oriented format (can see useful column like CPU and memory)
        
top
ps <PID>
ps u <PID>    cpu and memory
ps -U <username>
ps u -U <username>
pgrep -a <process>


------------------------------------------         niceness value

Niceness value is a number attached to processes in *nix systems   
is used to decide how much CPU time is allocated to it.
used to change the priority of a process, which, in effect, determines the urgency with which it is executed in the system. 
The nice command configures the priority of a Linux process before it is started. 
The renice command sets the priority of an already running process.

 -20 the highest priority
 +19 lowest
 
 By default, any Linux process created by a user has a nice value of 0
 
 check the nice (NI)
 #
 ps -l
 ps -le | grep <service>
 top
 ps lax
 
 #
 sudo renice -n <-20 to 19>  -p <PID>
 nice -nice_value command-arguments
 sudo renice -n 5 -u <username>       modify the priority of all processes owned by a group
 sudo renice -n 5 -g <groupname>      modify the priority of all processes owned by a user

nice -n 11 <process>    

regular user can only assign nice number between 0 to 19

ps l    will show the nice value in the column (NI)

to change the nice number when the process is up
sudo renice <nice_value> <PID>

-----------------------------------------------------------  to give signals to the programs - SIGHUP SIGKILL

#
sudo kill -SIGHUP <pid>

The SIGHUP signal is used by some utilities as a way to notify the process to do something, such as re-read its configuration file. 
The SIGHUP signal is also sent to a process if the remote connection is lost or hangs up. 
The SIGKILL signal is used to abort a process, and the SIGSTOP signal is used to pause a process.

list of signals 
kill -L


------------------------------------------------------  background and foreground process

ctrl + Z -> background process. the process will be frozen
fg        -> bring back to foreground


to run in back ground use the &
sleep 300&

check commands in the background  
jobs  
when you use the & and wants bring back use
jobs command to see the programs are running and also the number then
fg <select_the_number>

if the job is stopped with ctrl+z  use the jobs command to check the number and then use
bg <select_the_number>


------------------------------------------------------ LSOF

what files or dir resources using right now
for example to see which files and dir bash process is currently using
lsof
ls - list
of- open files

sudo lsof -p <PID>

lsof command is mainly used to retrieve information about files that are opened by various processes. 
Open files in a system can be disk files, network sockets, named pipes and devices.
The lsof command stands for LiSt Open Files and shows open files and which process uses them

#
lsof -p <PID>
lsof /proc
lsof -u admin
lsof -i TCP:22


============================================================================== Locate and analyze system log files 


log daemon rsyslog is the popular in Linux that stores all logs in /var/log

ls /var/log/

grep -r 'ssh' /var/log/

system logs
/var/log/messages
/var/log/

tail -F /var/log/secure   (you can watch the log waiting for inputs; liveview)

journalctl              ( > you can use to navigate)
journalctl /bin/sudo
journalctl -u sshd.service
journalctl -e                 (go to end to the journalctl)
journalctl -F                 (liveview)
journalctl -p err             (use journalctl -p to list those using 2 TAB -> (err, alert, crit, debug, emerge, info, notice, warning, ...))
journalctl -S 02:00                     -S for specify time
journalctl -S 01:00 -U 02:00            logs started in 01:00 to 02:00
journalctl -S  '2021-11-16 12:04:55'
sudo journalctl -p info -g '^c'               Analyse the info priority logs through journalctl that begin with letter c
journalctl logs are reset after reboot/power off, to save create /var/log/journal/


to see who is logged in the system
last     
lastlog  (ssh will see an IP addr)


=================================================================         Manage tuning profiles 

tuned is a service that monitors your system and optimizes the performance under certain workloads
like High throughput systems, low latency and power saving

when installed it will automatically selects what it believes is the best profile for youyr system
if the High throughput is selected in a VM the virtual guest profile would get selected

Sysadmins can use the static profiles to define specific performance parameters or allow the system to switch profiles dynamically 
depending on the existing workload.
A profile is a set of rules that defines certain system parameters such as disk settings, kernel parameters, network optimization settings, 
and many other aspects of the system.


sudo yum install tuned
sudo systemctl enable --now tuned
tuned-adm --help
tuned-adm active                                                    show the active profile
sudo tuned-adm profile virtual-guest powersave                      Apply the powersave profile in addition to the current active profile. 
tuned-adm verify
tuned-adm list
tuned-adm profile balanced
tuned-adm profile_info
tuned-adm recommend
tuned-adm auto_profile
tuned-adm profile_mode
/usr/lib/tuned                tuned profiles are located
/etc/tuned                    main configuration custom profiles
/etc/tuned/tuned-main.conf     find out the required status



=========================                Configure Local Storage                ======================================================

Divide a storage device is called partitioning

check partitions in linux
#
lsblk 
to be a partition in the output must show part ion the type column
virtual machines storages devices typically begin with V
s SATA
nvme  NVMe


----------------------------------------- fdisk
fdisk pre installed partitioning utility. This command shows a list of partitions on this block
storage devices is divided into sectors
check the partition  and with the number in start column multiple with the sector size it will have the Sectors column which will be the size, this
means that the partition has the size of free space before that sectors 0 to 2047 (2047 for example is the number shown in the Start column)
it is good to leave at least 1G free for bootloader in case needs to be install in that area. This method is MBR

#
sudo fdisk --list /dev/sda

#
You need to run the command for every partition, the defaults it will change for each partition (the utility will give the defaul option)
Create 3 primary partitions on /dev/vdb
first 10MB
second 21MB 
third 15MB

sudo fdisk /dev/vdb

Command (m for help): n
Select (default p):  <just-leave-it-default-and-press-enter>
Partition number (1-4, default 1): <just-leave-it-default-and-press-enter>
First sector (2048-2097151, default 2048):  <just-leave-it-default-and-press-enter>
Last sector, +sectors or +size{K,M,G,T,P} (2048-2097151, default 2097151): +10M
Command (m for help): w

to check use 
lsblk
vdb    253:16   0   1G  0 disk 
├─vdb1 253:17   0  10M  0 part 
├─vdb2 253:18   0  21M  0 part 
└─vdb3 253:19   0  15M  0 part 


-------------------------------------- cfdisk
#
sudo cfdisk /dev/sdb

GPT less likely to be corrupted and many more primary partitions and use much larger partitions
gpt = gpt
dos = mbr

can select swap space


====================================================         Configure and manage swap space

swap area wher linux can temporarily move some data from the computer RAM
when you open a program and it is just there doing nothin and you want to open a browser, even doesnt have enough memory, linux
will move the memory used in the program, which you havent done much, and move the memory to swap partition.

Swap is a space on a disk that is used when the amount of physical RAM memory is full. When a Linux system runs out of RAM, 
inactive pages are moved from the RAM to the swap space.

Create a file that will be used for swap
If falllocate is not installed or if you get an error message 
#
sudo fallocate -l 1G /swapfile

to check if the system uses any kindof swap areas
swapon --show

to make a partition be a swap area
sudo mkswap /dev/vdb3   (check first with the command lsblk) - this command format a partition as swap space
sudo swapon --verbose /dev/vdb3

in /etc/fstab 
/dev/vdb2 swap swap defaults 0 0

But if you reboot the system the partition wont be used as swap
sudo swapoff /dev/vdb3   stop using the partition as swap

create a  file with empty zeros
sudo dd if=/dev/zero of=/swap bs=1M count=128 status=progress
dd will copy the if file to of, count means to write 1 megabyte block 128 times. it will be 128Megabytes

make sure so set proper permissions
sudo chmod 600 /swap

then
sudo mkswap /swap
sudo swapon --verbose /swap


Increase the existing swap (i.e /swapfile) size by 1GB
sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 oflag=append conv=notrunc
sudo swapoff /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile


remove Swap File 
#
sudo swapoff -v /swapfile
Remove the swap file entry in /etc/fstab
sudo rm /swapfile


===========================================================      Manage and configure LVM storage 

lvm = logical volume manager
free spaces in multiple portions of disk or if we have multiple discs that we would like to combine together

man lvm
check some commands can type
vg in the terminal
pv
it will show a list of commands

sudo dnf install lvm2
pv -  physical volumes
 sudo lvmdiskscan     OR           sudo pvs                         when pvcreate you can check the disks are LVM
 sudo pvcreate /dev/sdc /dev/sdd
 sudo vgcreate <type_any_name_for_groupname> /dev/sdc /dev/sdd
 sudo vgextend  <type_groupname> /dev/sde                           to extend the volume group
 sudo vgs                                                           list volumes groups
 sudo vgreduce  <type_groupname>   /dev/sde                         to remove a physical volume
 sudo pvremove /dev/sde                                             to remove entirely from lvm
 sudo lvcreate --size 2G --name partition1  <type_groupname>        need to add a partition, need to add a logical volume 
 sudo lvresize --extents 100%VG  my_volume/partition1               to grow the logical volume after partition the disk
 sudo lvresize --size 2G   my_volume/partition1                     to shrink
 sudo lvdisplay                                                     check the lv and pv
 sudo lvremove volume1/smalldata                                    to remove the partition
 sudo mkfs.xfs   /dev/<type_groupname>/partition1                   to store files and dir on a logical volume we need a filesystem
 
 sudo lvresize --resizefs --size 3G <type_groupname>/partition1     to resize a logical volume with the filesystem
 sudo lvresize -L 1G  volume1/smalldata                             example of resize
 
 sudo mkfs.xfs /dev/volume1/smalldata                               create a file system for a LV
 sudo fsck /dev/volume1/smalldata     OR  lsblk -f                  check the file system for the partition
 
 
 =================================================================       Create and configure encrypted storage
 
 
 plane mode - we need to open the device 
 sudo cryptsetup open --type plain /dev/vde mysecuredisk
 open is to open the device for reading encrypted data from it and writing encrypted data to it
 mysecuredisk is the name of the disk you want
 --verify-passphrase is to type twice the password,because the plane mode doesnt check if the password is not correct
 
 it will be saved in /dev/mapper/mysecuredisk
 act like a disk, which you can mount, create file system 
 sudo mkfs.xfs /dev/mapper/mysecuredisk
 sudo mount /dev/mapper/mysecuredisk /mnt            TO unmount -> sudo umount /mnt
 it is important to close otherwise can be readable in /dev/mapper
 sudo cryptsetup close mysecuredisk
 
 
  
 LUKS - need format the storage and open
 another way to encypt and easier. Format the disk or partition we intend to use with linux encryption
 sudo cryptsetup luksFormat /dev/vde        /dev/vde is formatted to be used with LUKS encryption. /dev/vde should be mapped to an unencrypted device called secretdisk
 sudo cryptsetup open /dev/vde mysecuredisk  
 sudo cryptsetup luksChangeKey /dev/vde      change the password the encryption key
 once formatted can open using
 we dont need specify the type of encryption when we format a device with Luks that writes a very small block of data to the storage
 called header
 sudo mkfs.xfs /dev/mapper/mysecuredisk
 sudo cryptsetup close mysecuredisk
 sudo cryptsetup luksFormat /dev/vde2        to encrypt part of the disk, only the partition
 sudo cryptsetup open /dev/vde2 mysecuredisk
 
 
 ===========================================================================  Create and manage RAID devices 
 
 raid 0 - stripped, if we lose one disk all data will be lost
 raid 1 - redundant, mirror array, clone all data in all storages
 raid 5 - min 3 disk, has parity on each disk (used to rebuilt in lost of data), can lose 1 disc
 radi 6 - 4 discs, can lose 2 discs and still recovers data
 raid 10  - combination level 0 and 1
 
 sudo yum -y install mdadm
 sudo mdadm --create /dev/md0 --level=0 --raid-devices=3 /dev/vdc /dev/vdd /dev/vde
 sudo mkfs.ext4 /dev/md0
 sudo mdadm --stop /dev/md0    to stop or deactivate an array
 sudo mdadm --zero-superblock /dev/vdc /dev/vdd /dev/vde   to avoid the linux when bootup looking for arrays, if dont use this command linux will 
 built the array 
 sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/vdc /dev/vdd --spare-devices=1 /dev/vde      add spare disk in an array
 
 add/remove more disks on the array /dev/md0
    #
    sudo mdadm --manage /dev/md0 --add /dev/vde          
    sudo mdadm --manage /dev/md0 --remove /dev/vde 
 
 #
  cat /proc/mdstat             look the status of array
 
 in /etc/fstab
 /dev/md0 /raid xfs defaults 0 0
 
 
================================================================    Create, manage and diagnose advanced file system permissions 
 
 ACLs (Access Control Lists) defines specific permissions for two or more users/groups
 
 sudo setfacl --modify user:<username>:rw file.txt
 
 when you use the command ls -l will see a + mark at the end
 to check tha acl in the file
 getfacl file.txt                                             the output shows the mask, which means the maximum permission we can get in that file
 
 sudo setfacl --modify mask:r file.txt                                  to set/change a mask
 sudo setfacl --remove user/group:<username/groupname> file.txt         to remove acl group/user
 sudo setfacl --recursive -m user:<username>:rw dir/                    to set ucl dir and subdir/files as well
 sudo setfacl --recursive --remove user:<username> dir/                 to remove ucl dir and subdir/files as well


========================================================== chattr, lsattr

cannot delete the file even the owner or root
to only append to a file, this way you can not overwrite like
echo hi > file1 it wont work
run the command
sudo chattr +a file1
echo hi> file1   -> the output shows operation not permitted
echo hi >> file1   -> it will work after run the program chattr
sudo chattr -a file1     to remove the append
sudo chattr +i file1   immutable cannot be change, even the root cannot do it. To remove instead +i type -i
lsattr file1    to show the permissions set


================================================================  Setup user and group disk quotas for filesystems 

quotas is a simple way to limit how much storage space each user or group can use

sudo dnf install quota
sudo vim /etc/fstab
      /dev/vdb1 /mybackups xfs ro,noexec 0 2
      /dev/vdb1 /mybackups xfs defaults,usrquota,grpquota 0 2   ->add defaults,usrquota,grpquota
 then save the file and reboot
 sudo systemctl reboot
 sudo quotacheck --create-files --user --group /dev/vdb2       it will create to files in a filesystem aquota.group and aquota.user
 sudo quotaon /mnt    this is when you mount in /mnt
 
 create a file with a specific size
 fallocate --length 100M /path/dir/100Mfile
 
 to edit quotas to a user
 sudo edquota --user <username>
 sudo quota --user <username>    if the user use more than capacity, it will have a grace period wwith that the user wont be able to write any data
 sudo quota --edit-period        to edit the grace period, soft limit
 sudo edquta --group <group_name>


Edit disk quotas for the user called john. Set a soft limit of 100 megabytes and hard limit of 500 megabytes on /mnt partition.
sudo xfs_quota -x -c 'limit bsoft=100m bhard=500m john' /mnt/



=========================                Create and Configure File Systems                ======================================================

----------------------------------------------------  mkfs
centOS use xfs file system, but can use ext4

sudo mkfs.xfs /dev/sdb1    
sudo mkfs.ext4 /dev/sdb1

sudo mkfs.xfs   - it will show many flags we can use
xfs             - double TAB to check more utilities

sudo mkfs.xfs -L "DataDisk" /dev/vdb          label DataDisk
sudo tune2fs -l /dev/sdb2                     this is to change in the ext4 filesystem
sudo mkfs.ext4 -N 2048 /dev/vdc               ext4 filesystem with a number of 2048 inodes on /dev/vdc
man mkfs.ext4
man mkfs.xfs

/etc/fstab
/swap_file none swap defaults 0 0             add swap after boot
/swap_file swap swap defaults 0 0


===================================================================   Create, mount, unmount, and use vfat file systems

------------------------------------------------------- vfat   

vfat virtual file allocation table
is used primarily for compability reasons, every OS can read files from vfat file systems
is used to share storage between windows and linux

to change the partition type use
sudo fdisk /dev/vdb       t for type; b for W95 FAT32
sudo mkfs.vfat /dev/vdb1      up to 2GB in size
sudo mkfs.vfat -F 32 /dev/vdb1     2GB or larger size, up to 16TB with 4096 byte per sector

sudo mkdir /myvfat
sudo mount /dev/vdb1 /myvfat/
sudo vi /etc/fstab
      /dev/vdb1 /myvfat vfat defaults 0 0
sudo umount /myvfat/


================================================================== Configure systems to mount file systems at or during boot

It instructs the operating system that filesystem is ready to use and associate it with a particular point in the system's hierarchy. 
Mounting will make files, directories and devices available to the users.
The mount command is used to make a device or file system accessible to the system, and then to connect 
its root directory to a mount point on the local file system.


the files can be accesible we must first mount
first look at a dir often used for temporarily mounting random filesystem
  ls /mnt/

to mount we use
sudo mount /dev/vdb1 /mnt/

with the file system mounted then we can create file on it
sudo touch /mnt/testfile

to see the block is mounted
lsblk

to unmount a file system use
sudo umount /mnt/

--------------------------------------------------------    /etc/fstab

 The fstab file typically lists all available disks and disk partitions, and indicates 
 how they are to be initialized or otherwise integrated into the overall system's file system


/dev/mapper/cs-root   /   xfs   defaults  0   0
1 - tell linux to mount the file system contained in the partition
2 - specify the mount point
3 - filesystem type
4 - mount options
5 - tell the utility dump should back up the files (0 is disabled; 1 enabled) - it is not used nowadays
6 - decide what to do when errors are detected  (0 filesystem shoud never be scanned for erros; 1 scan first for errors before - root filesystem
; 2 scan after scan number 1 - other filesystems, like /dev/vdc (this filesystem should be checked on boot))

man fstab

sudo vim /etc/fstab
/dev/vdb1/    /mybackups    xfs   defaults 0  2

sudo systemctl daemon-reload

mount swap partition when boot up
sudo vim /etc/fstab
/dev/mapper/cs-swap    none    swap   defaults 0  0
/dev/vdb3   none      swap    defaults 0 0 


you can use UUID, to avoid connect the storages in diferent connectors on motherboard, instead to use in fstab /dev/vdb1/
you can check the uuid in
sudo blkid /dev/vdb1



=================================================================     Configure disk compression 

Virtual Data Optimizer (VDO) is a block virtualization technology that provides transparent deduplication of data. 
By eliminating redundant chunks of data, VDO can greatly reduce actual used disk capacity.

virtual data optimizer - VDO
helps with zero-block filtering; deduplication and compression

zero-block filtering -look all the block and filters out block that contain only zeros (no data)

deduplication - video check if data has been written to the disc already in another place

compression - compress the data and packed together to save space on the disk


sudo yum install vdo

sudo systemctl enable --now vdo

sudo vdo create --name=vdo_storage --device=/dev/vdb --vdoLogicalSize=10G

sudo vdostats --human-readable

sudo mkfs.xfs -K /dev/mapper/vdo_storage  

sudo udevadm settle

sudo vdostats --human-readable

mount vdo devices

sudo mkdir /mnt/myvdo

sudo vi /etc/fstab
      /dev/mapper/vdo_storage       /mnt/myvdo        xfs   _netdev,x-systemd.device-timeout=0,x-systemd.requires=vdo.service 0 0
       _netdev,x-systemd.device-timeout=0,x-systemd.requires=vdo.service  -> mount options are required for all video devices to be mounted
       at boot time, the service needs to be load before the device can be mounted again.

df -h /mnt/myvdo

-----------------------------------------------------------  saving space with VDO 

Virtual Data Optimizer (VDO) is a block virtualization technology that provides transparent deduplication of data. 
By eliminating redundant chunks of data, VDO can greatly reduce actual used disk capacity.


rhel9  
sudo pvcreate /dev/vdb
sudo vgcreate vdo_volume /dev/vdb
sudo lvcreate --type vdo -n vdo_storage -L 100%FREE -V 10G vdo_volume/vdo_pool1
sudo mkfs.xfs -K /dev/vdo_volume/vdo_storage     OR     sudo mkfs.ext4 -E nodiscard /dev/vdo_volume/vdo_storage 


mounting lvmvdo devices

manlvmvdo
sudo mkdir /mnt/myvdo
sudo vi /etc/fstab
                   /dev/vdo_volume/vdo_storage       /mnt/myvdo        xfs   defaults    0 0
sudo mount -a
df -h /mnt/myvdo


=======================================================================   Manage layered storage 

Stratis is a local storage management tool. Manages pools of physical storage, helps simplify storage management
central component of Stratis is the storage pool, they are created from one or more disks or partitions, after created volumes can be
created on top of that

stratis is similar to lvm, but is easier to configure, deploy and manage
XFS file system
dont use XFS tools to manage stratis filesystem

sudo yum install stratisd stratis-cli

sudo systemctl enable --now stratisd.service

sudo stratis pool create my-pool /dev/vdc
can use one more block  just specify in the command 
sudo stratis pool create my-pool /dev/vdc /dev/vdd

sudo stratis pool list              
sudo stratis blockdev

create a filesystem
sudo stratis fs create my-pool myfs1                  myfs1 is the filesystem create on top of the pool
sudo stratis fs create developers devfs               one example to create fs on top of the developers pool
sudo stratis fs

sudo mkdir /mnt/mystratis
sudo vi /etc/fstab 
            /dev/stratis/my-pool/myfs1  /mnt/mystratis      xfs   x-systemd.requires=stratisd.service  0   0
            /dev/stratis/developers/devfs /mnt/devstorage xfs x-systemd.requires=stratisd.service 0 0

/dev/stratis/developers/devfs         Can be seeing using the command sudo stratis fs

sudo mount -a
sudo cp /home/username/file /mnt/mystratis

to add storage
sudo stratis pool add-data my-pool /dev/vdd
sudo stratis pool

filesystem snapshots
sudo stratis fs snapshot my-pool myfs1 myfs1-snapshot
sudo stratis fs snapshot developers devfs devfs-snapshot
sudo stratis fs   to check the snapshot

to recover from snapshot
rename the current statis file system 
sudo stratis fs rename my-pool myfs1 myfs1-old         sudo stratis fs rename developers devfs devfs-bad (another example)
next rename the snapshot to use the original filesystem name
sudo stratis fs rename my-pool myfs1-snapshot myfs1
sudo umount /mnt/mystratis
sudo mount /mnt/mystratis




====================================              Deploy, Configure, and Maintain Systems                ================================================


----------------------------------------------------------------------   CRONTAB  

cat /etc/crontab 
  can use  ',' this it will run multiple times like 15min and 45minutes -> 15,45
  can use '-', set hours to 2-4 2am,3am,4am
  can use '/', to specifies steps, every 4hours it will run
  Minute(0-59) Hour(0-23) Day_of_month(1-31) Month(1-12) Day_of_week(0-6) 0 Saturday 6 Sunday
  
crontab -e 
  edit he table of youyr current user
  
crontab -l   - to see user logged in cronjobs

to edit as sudo just add usdo at the front
sudo crontab -l   
sudo crontab -e

to add with different user
sudo crontab -e -u <username>

to remove cronjob
crontab -r
sudo crontab -r -u <username>

to run a sheel script in a cronjob dont add extension
makes executable
sudo chmod +rx /etc/cron.hourly/shellscript
if want run hourly (/etc/cron.hourly) just move to this dir, using sudo 

check the logs
sudo cat /var/log/cron

to send an email to user change the MAILTO=root


---------------------------------------------------------   Scheduling jobs with anacron 

using anacron we dont care the time the job is going to run, just want to run daily, hourly,...

to add a job need to edit the file
sudo vim /etc/anacrontab

can use anacron -T  to test the job

sudo vim /etc/anacrontab

to run the jobs right now
sudo anacron -n

check the logs
sudo grep anacron /var/log/cron


Scheduling jobs with at ------------------------------
just specify the time

at 15:00
at> /usr/bin/touch  file
ctrl +d to save the job

at 'December 01 2020'
at '1:30 December 01 2020'
at 'now + 30 minutes'     in 30 minutes from now

atq   to see the jobs
at -c <job_id>    to see what the jobs does

atrm <job_id>     to remove the job


Manage the startup process and services =============================================================================

units - services, socket, device, timer
units tells the init system all it needs to know about how it should manage the entire life cycle of certain app

man systemd.service

systemctl cat sshd.service
execstart
execreload
those command tells the init which command should run

sudo systemctl edit --full sshd.service

when change the config use 
sudo systemctl restart sshd.service
but if a user is using that service may interrupt their work temporarily, better way is to use (not all servicxe can use reload)
sudo systemctl reload sshd.service
sudo systemctl reload-or-restart sshd.service

sometimes services start even there are disabled and stopped
to force brute stop
sudo systemctl mask atd.service    when you mask a service when you enable it wont work, need unmask
sudo systemctl unmask atd.service

to list services available on the system
sudo systemctl list-units --type service --all


Install and update software packages from Red Hat Network, a remote repository, or from the local file system=========================================

package manager - dnf, yum

list of which repo are currently enabled on the server/host
sudo yum repolist
sudo yum repolist -v    get a list of online repo, that your system is currently using 

sometimes the default repo dont include what we are looking for 
to list the optionals repo
sudo yum repolist --all
sudo subscription-manager repos --enable <repo.rpms>
sudo yum-config-manager --enable <repo.rpms>

if we dont fid the repo we want and want add other repo
use the yum conf manager
first install this utilities
sudo yum install yum-utils    this contains yum manager
sudo yum-config-manager --add-repo <website.repo>       add the repo online
sudo yum-config-manager --add-repo <IP/Repo.repo>       add the repo local
    with that will create /etc/yum.repos.d/<repo>.repo


sudo viu /etc/yum.repos.d/<repo>.repo
[base]    ->name of the repo
name=CentOS-$releasever - Base      -> long name for the repo
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/      ->tells where the repo is located, can be local or  in the internet
enabled = 1         -> 1 means available for use 
gpgcheck=1          -> check the validity of the package using gpg keys
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7     ->where is the gpg located


yum can also used to install and uninstall individual packages from repo
for that we need to know the name of the package, if you dont know can use yum to look for it
ex.: sudo yum search web server
sudo yum search 'web server'

sudo yum info <package>

sudo yum install <package>

sudo yum reinstall <package>
 
sudo yum remove <package>

to install packages in a certain grop
sudo yum group list
sudo yum group list --hidden
sudo yum group install '<groupname>'

yum can install software from rpm packages
sudo wget https://package.rpm
sudo yum install <./package.rpm>
sudo yum remove <package_name>

sometimes packages pull in dependencies which are ohte components that they need to run correctly
when remove the package  some of those dependencies might be left behind
to make sure that remove automatically all dependencies after removed the package
sudo yum autoremove

update and upgrade packages
sudo yum check-upgrade  check which package needs an update
sudo yum update     to update all packages to the latest version




=================================         WORKING WITH PACKAGES MODULES STREAM                       ==============================================
=================================================================== modules   

stream allow to designate multiple versions of software packages to group together as modules
give greater flexibility and compatibility options
module is a set of packages that normally get installed together

available modules
sudo yum module list

install
sudo yum module  install nodejs
sudo yum module list --installed nodejs


different version  (/name-of-profile), can get the name in module list
sudo yum install module nodejs:14/development

to change the module 
sudo yum module reset nodejs
sudo yum module  install nodejs:16/development

Reset the module stream for the container-tools package as below:
sudo yum -y module reset container-tools
Then use yum to install version 3.0 of the container-tools package with below command:


sudo yum -y module install container-tools:3.0 --skip-broken --allowerasing --nobest




 

 






=============================                  SELinux                   ==============================================================

SELinux context label for the sshd process
#
check the PID for the process
systemctl status <service>
ps -el | grep <service>

ps -Z <service_PID>


current SELinux mode on the system
#
getenforce


 SELinux file context for the file at /home/user
 ls -Z /home/user
 









