
  ======================================             Essential Tools                    ===================================================================


save all command output (both errors/warnings and normal output
sudo ./script.sh > /home/bob/output.txt 2>&1 
#
id  uid,gid,...
#
who  users log in the current system
#
last  show the logged in users
#
su -  switch users, this requires the password for the user you are switching to
#
sudo  better option for su, prompt to type the user is logged in. Default conf (/etc/sudoers), this can be update using visudo
#
under /etc/sudoers  for users to run specific commands: user localhost=/usr/bin/shutdown -r now
                    can set up shell /usr/bin/nologin -> this means noone can login into the system using root user and password directly
                              
   the number 3 in brackets is user:group that first field can run the command

bob = ALL(ALL:ALL) ALL
bob - user
%bob - group
ALL (column 2) - localhost
ALL:ALL - user:group
ALL (column 4) - command, could be /usr/bin/shutdown -r now; /bin/ls; etc


absolute path always start with the /
  relative example you are /home/user and want to move to /var/log -> cd /var/log
  

when copy it is a good practice to terminate with / whne it is directory
#
cp file.txt dir/
cp file.txt dir ->this dir could be a file
cp -r (recursive - it will copy the directory (including all its contents)) cp -r /tmp/Invoice /home/user   It will have /home/user/Invoice/files
cp -r Copy/ Paste/  with the paste dir already exist it will be under Paste/ this Paste/Copy/files and dir
                    with the paste dir doesnt exist it will be under Paste/ this Paste/files and dir
when use move command mv, doesnt need to use the flag -r
cp -a  (keep the attributes) - to learn more read this - https://medium.com/for-linux-users/linux-file-attributes-made-easy-8d100c0a5813
(to deal with the attributes of the files install the package sudo yum install e2fsprogs)
lsattr myfile.txt 
--------------e----- myfile.txt


#
rm -r to delete directories
  
#  
 mkdir and subdirectories ( -p flag)
 mkdir -p /tmp/1/2/3/4/5/6/7/8/9

Move all content of
#
mv /home/bob/dir/* /home/bob/new-dir/

list full time
#
ls --full-time


===================================================== Hostnamectl & /etc/hostname

If you wish to permanently change the hostname without rebooting your computer, use the hostnamectl command

#
hostnamectl set-hostname name
#
hostnamectl set-hostname -H [username]@hostname
#
hostanamectl status
#
sudo vi /etc/hostname


==================================================== APROPOS 

If the apropos command does not work because your manual pages are not indexed
Getting this message "nothing appropriate."

#
mandb
#
apropos "nfs mount"

check manuals programs packages installed on the system /usr/share/doc


=================================================== SOFT LINKS
 
 
 soft link points to a path, like a shortcut
 
 ln -s /home/user/Pictures/picture.jpg /home/user/Desktop/pictures_shortcut.jpg
 ln -s /tmp /home/bob/link_to_tmp
 
 when you list ls -l it will show the " L " at the beginning like:  lrwx------
 
 can use the command below to check the path link
 readlink pictures_shortcut.jpg
 
 if someone does change can break the link and it will be show in red when listed. to tackle that use relative paths to direct to the file 
 and not the file itself, because if someone delete it wont work the link
 
 can soft link files, directories, can be in different file systems


===================================================   HARD LINKS   - INODE 

A "hard link" is a directory entry that points to the same data on disk as a directory entry somewhere else.

stat /home/user/picture.jpg
it will show the inode. Inode remember all the pieces are store and keeps track like permissions, when modified, etc
links. usually you have one link which it will link the absolute path file to the inode

in case for example another user want to see the picture, you dont need copy and paste. This saves resource storage

ln path_to_target_file path_to_link_file
path_to_target_file - file you want to link
path_to_link_file - name of the new directory you want the pictures be copied

ln /home/user/Pictures/picture.jpg /home/new_user/Pictures/picture.jpg
ln /tmp/hlink /home/bob/hlink

if the user delete his file the new user still can have access to the pictures

limitations
  only for files, not directories
  only link on the same file system
  make sure has right permissions, the example above we might add the user and new_user to the same group ( useradd -a -G family user ,  useradd -a -G family new_user)

Verify Hard links
Use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number. 


================================================================= FIND


#
find /opt/assets/ -type f -exec grep -Iq . {} \; -print        find file that contains text, when the others are empty
#
find /opt/assets -type f -perm 2664 -exec cp -p {} /home/bob/specialfiles/ \;


SUID - 4
SGID - 2
Sticky bit - 1
-exec <command> {} \;
      find will execute <command> and will substitute {} with the filename(s) found. 
      with ; a single <command> for each file is executed 
      escaped here as \; to prevent the shell from interpreting it

{} \; : executing the commands for each found result
{} + : executing the command once with all results argument like this -> ls file1.txt file2.txt file3.txt  


find /path -name file.txt
find /path -iname file.txt              -case sensitive
find -mmin        modified minute (modified means creation or editing a file) Modified means when the contens have been modified
find -mmin 5      5 min ago (if now is 11:00 it will find files in 10:55)
find -mmin -5     5 min ago (if now is 11:00 it will find files BETWEEN 10:55 until 11:00)
find -mmin +5     list files before 5 min ago (if now is 11:00 it will find files from 10:55 to the infinite 10:45, 10:30, 9:30, etc)
  
find -mtime 0     search for files per days or past-24hours periods
0 past 24 hours
1 24h to 48h
  
created
find -cmin -5   created last 5 minutes
  
find -size
c bytes
k kilobytes
M megabytes
G gigabytes
  
find -size 512k       = 512
find -size +512k      > 512
find -size -512k      < 512
                            
sudo find /usr -type f -size +5M -size -10M           Find all files between 5mb and 10mb in the /usr directory
             
find -perm 664       exactly perm
find -perm -664       find bearly perm  
find -perm -u=rw,g=rw,o=r       find bearly perm                          
find -perm /664       find files with any of these perm                          
                             
find -name "f*" -size 512k          AND operator                     
find -name "f*" -o -size 512k       OR operator  
find -not -name "f*"                NOT operator
 
Find files/directories under /var/log/ directory that the group can write to, but others cannot read or write to
sudo find /var/log/ -perm -g=w ! -perm /o=rw                          
! expr : True if ‘expr’ is false.
not to be r or w. That means, if any of these two permissions, r or w match for others, the result has to be excluded
  
  
================================================ CHMOD  - SETUID, SETGID, STICKY BIT


[S ; s (with x)] SETUID -  makes an executable run with the privileges of the owner of the file
[S ; s (with x)]SETGID -  makes an executable run with the privileges of the group of the file.
[T ; t (with x)] STICKY BIT - This permission does not affect individual files. At the directory level, it restricts file deletion. 
                              Only the owner (and root) of a file can remove the file within that directory.

4 - r
2 - w
1 - x

u - user (owner)
g - group
o - other 
a - all (u, g, and o)

sudo chmod g+rw
sudo chmod u-w
chmod go+rw 


=================================================================== HEAD, TAIL, TAC


  tac file.txt   -> will see bottom to top  inside the file which is small
  
  cat file.txt    -> top to bottom inside the file which is small
  
  tail file.txt   ->  will see bottom to top  inside the file which is large, default is 10 lines
  
  tail -n 20 file.txt ->  will see bottom to top  inside the file which is large, shows 20 lines
  
  head file.txt   ->  will see top to bottom  inside the file which is large, default is 10 lines
  
  head -n 20 file.txt ->  will see top to bottom   inside the file which is large, shows 20 lines
  
  head -5 file.txt  ->  will see top to bottom   inside the file which is large, shows 5 lines
  
  
 ===================================================================  SED 
  
  sed 's/old_string/new_string/g' file.txt
  s -> substitute
  g -> global replace
  
  sed -i 's/old_string/new_string/g' file.txt
  -i -> will edit the file, it will swap the strings
  
  sed -i 's/disabled/enabled/gi'
  gi - ignore case sensitive. For example, any string like disabled, DISABLED, Disabled
  
  
  Change all values enabled to disabled only from line number 500 to 2000.
  
  sed -i '500,2000s/enabled/disabled/g' file
  
  Replace all occurrence of string #%$2jh//238720//31223 with $2//23872031223 i
  
  sed -i 's~#%$2jh//238720//31223~$2//23872031223~g' file
  
  
  
=================================================================== DIFF

analyze files, see the differences between them 
for the flags is good to look at diff --help

diff file1 file2
diff -c file1 file2 
diff -y file1 file2  (side by side)
sdiff -y file1 file2  (side by side)  



=================================================================== CUT

 cut -d ';' -f 2 testfile
 cut -d ' ' -f 1 file.txt    first column that appears on each line
 d - delimiter
 ' ' -> words are separated by space, ',' words separated by comma
 f -> fields we want extract
 

=================================================================== GREP 


egrep -w '[A-Z][a-z]{2}' /etc/nsswitch.conf           starts with a capital letter and are then followed by exactly two lowercase letters  
grep -r [A-Z,a-z] /opt/assets/                        find file that contains text, when the others are empty. And also print the content
egrep '[0-9]{5}' textfile                             file there's a number that has 5 digits
grep -c '^2' textfile                                 how many numbers begin with a number 2
grep -ic '^SECTION' testfile                          how many lines begin with string Section
grep -w man testfile                                  match the only word
grep -o 'string' /path                                output it will show only the word
grep '^start' file                                    begin with start
grep man file                                         any word with man. Like man, manpath, manual
grep 'man$' file                                      $ - end of the line. Any line in which man is the last character on the line.
grep -r 'c.t' /etc                                    execute, cat, cut
grep -wr 'c.t' /etc/                                  cat, cut, cpt
grep '\.' file                                        to search for DOT in a file
grep '/.*/' /etc/                                     to search anything with /bla/, / /, /path/hello
egrep 'disabled?'                                     will search for disabled, disable
egrep 'disabled|enabled'                              match one thing or the other

to avoid to use \ and get confuse with . and so on. It is good practice to use grep -E or egrep

egrep -r '0{3,}' /path/                              to find at least 3 zeros 
egrep -r '0{3}' /path/                               exactly 3 zeros
egrep -r '0{3,5}' /path/                             range of zeros
 


-c : count
-i : ignore string case
-w : exactly word
-r : recursive search


================================================================ TAR / STAR
 
 create an archive requires 3 steps
    Archiving - pack those files and dir into a single file backup.tar
    Compress the archive (makes smaller size of the original) backup.tar.gz
    Copy where you would keep your backup
  
before extract always check the content and the paths  
archive also store permissions and ownership info
 
 best way to use this utility is using tar --help
 
 #
 
 tar rf archive.tar file1    add a file to tar archive
 tar cf archive.tar Pictures/  create a tar file with entirely directory content to archive
 tar cf archive.tar /home/user/Pictures/  the content it be save with the path /home/user/Pictures/
 tar xf archive.tar -C /tmp/      it will extract in the path given
 sudo tar xf archive.tar -C /tmp/      it will extract in the path given and the ownership and permission it will be preserved
 star -zc -f=/home/bob/backup.star.gz ~/files
 
 z - gzip
 bz - bzip
 c - create
 f= - file
 t - list content in .start.gz              star -t -f=backup.star.gz
 
 tar cfj /home/bob/asset_backup.tar.bz2 --absolute-names /opt/assets/

create an archive requires 3 steps
  Archiving - pack those files and dir into a single file backup.tar
  Compress the archive (makes smaller size of the original) backup.tar.gz
  Copy where you would keep your backup
  
before extract always check the content and the paths  
archive also store permissions and ownership info


===================================              Operate Running Systems                         ======================================

===================================================  Boot, reboot, and shutdown a system safely


systemctl - system control

sudo systemctl reboot
sudo systemctl poweroff

sudo systemctl reboot --force
sudo systemctl poweroff --force

to "press" reset button
sudo systemctl reboot --force --force

"unplug" the system
sudo systemctl poweroff --force --force

to schedule a time to reboot or/and shutdown
sudo shutdown 02:00   (2am)
sudo shutdown +15     in 15min shutdown
sudo shutdown -r 02:00    reboot -r
sudo shutdown -r +15      reboot in 15min
sudo shutdown -r +1 'Shceduled restart to do an offline-backup of our database'  -  single quotes, message to tell the user a message before reboot/shutdown
sudo shutdown -c    to cancel shutdown


===================================================================   Install, configure and troubleshoot bootloaders


On a system booting through legacy BIOS mode, what file would you edit before generating a new grub configuration file
/etc/default/grub

what command would you use to generate the new grub configuration file
grub2-mkconfig -o /boot/grub2/grub.cfg

one of the programs that loads up when turn on the computer it is a bootloader, this is to start the linux kernel
popular bootloader on linux is the GRUB

problem with the bootloader so the OS wont boot at all. We can use an USB sticky and boot from there using troubleshooting
then select - Rescue a CentOS Stream system 
choose option 1
chroot /mnt/sysroot
grub2-mkconfig -o /boot/grub2/grub.cfg   - generate a GRUB conf file when you have BIOS
grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg   - generate a GRUB conf file when you have EFI

Install grub to /dev/vda
#
lsblk - need to set the grub at the beginning of the disk, first check the block device (check for sd or vd), look for /boot, /
grub2-install /dev/sda
dnf resinstall grub2-efi grub2-efi-modules shim (this is for EFI only)
exit


change GRUB conf
sudo vim /etc/default/grub
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg - this is only for EFI
sudo systemctl reboot


===================================================  Boot or change system into different operating modes


system's current default boot target can be basic.target, graphical.target , etc

to check our default boot
systemcl get-default
graphical.target

sudo systemctl set-default multi-user.target  
sudo systemctl isolate graphical.target  (temporary gives a graphical prompt, after reboot back to the default you set to boot)
sudo systemctl isolate emergency.target   (for troubleshooting, read permissions, few system are loaded). You must have root password
sudo systemctl isolate rescue.target      (root permission, there will be more programs than emergency). You must have root password













================================================ TUNED
Sysadmins can use the static profiles to define specific performance parameters or allow the system to switch profiles dynamically depending on the existing workload.
A profile is a set of rules that defines certain system parameters such as disk settings, kernel parameters, network optimization settings, and many other aspects of the system.


================================================ systemd targets
Targets in systemd act as synchronization points during the start of your system.
The purpose of target units is to group together various systemd units through a chain of dependencies.
The graphical.target unit for starting a graphical session, starts system services such as the GNOME Display Manager (gdm.service) or Accounts Service (accounts-daemon.service), 
and also activates the multi-user.target unit.

#
systemctl get-default
systemctl set-default
ls -l /usr/lib/systemd/system/

basic
unit target covering basic boot-up

rescue
unit target that pulls in the base system and spawns a rescue shell

multi-user
unit target for setting up a multi-user system

graphical
unit target for setting up a graphical login screen

emergency
unit target that starts an emergency shell on the main console. provides the most minimal environment possible and allows you to repair your system even 
in situations when the system is unable to enter rescue mode. In emergency mode, the system mounts the root file system only for reading, 
does not attempt to mount any other local file systems, does not activate network interfaces, and only starts a few essential services.

sysinit
unit target that pulls in the services required for system initialization


=============================================== niceness value
Niceness value is a number attached to processes in *nix systems   
is used to decide how much CPU time is allocated to it.
used to change the priority of a process, which, in effect, determines the urgency with which it is executed in the system. 
The nice command configures the priority of a Linux process before it is started. 
The renice command sets the priority of an already running process.

 -20 the highest priority
 +19 lowest
 
 By default, any Linux process created by a user has a nice value of 0
 
 check the nice (NI)
 #
 ps -l
 ps -le | grep <service>
 top
 
 #
 sudo renice -n <-20 to 19>  -p <PID>
 nice -nice_value command-arguments
 sudo renice -n 5 -u <username>       modify the priority of all processes owned by a group
 sudo renice -n 5 -g <groupname>      modify the priority of all processes owned by a user


============================================== swap 

Swap is a space on a disk that is used when the amount of physical RAM memory is full. When a Linux system runs out of RAM, 
inactive pages are moved from the RAM to the swap space.

Create a file that will be used for swap
If falllocate is not installed or if you get an error message 
#
sudo fallocate -l 1G /swapfile

use the following command to create the swap file
#
sudo dd if=/dev/zero of=/swapfile bs=1024 count=1048576

Only the root user should be able to write and read the swap file
#
sudo chmod 600 /swapfile

mkswap utility to set up the file as swap area
#
sudo mkswap /swapfile

Enable the swap (non permanent)
#
sudo swapon /swapfile

#
sudo vi /etc/fstab  (permanent)
/swapfile swap swap defaults 0 0

To verify that the swap is active
#
swapon

remove Swap File 
#
sudo swapoff -v /swapfile
Remove the swap file entry in /etc/fstab
sudo rm /swapfile

create a  file with empty zeros
#
sudo dd if=/dev/zero of=/swap bs=1M count=128 status=progress
dd will copy the if file to of, count means to write 1 megabyte block 128 times. it will be 128Megabytes

================================================================== partitions

Your hard drive is usually partitioned into logical volumes called partitions.
 
 check first the hard-disk and the partitions
 #
 lsblk
 
 #
 cfdisk /dev/sdb
 fdisk /dev/sdb
 
 
 ================================================================== LVM - https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Cluster_Logical_Volume_Manager/LV_create.html
 
 #
 sudo pvcreate /dev/hdd                                     create a physical volume
 sudo vgcreate <volume_groupname> /dev/sda6 /dev/sda7       create a volume group (with two physical volumes)
 sudo lvcreate -l 100%FREE -n storage volume1               create a logical volume named storage using 100% of the free space on the volume group volume1
 sudo lvcreate -l 60%FREE -n storage volume1                 60% of the total space in volume group volume1
 
 

=========================                Create and Configure File Systems                ======================================================



======================================================================== Create FileSystem

mkfs.xfs block-device


mount -t TYPE DEVICE_NAME DIRECTORY
-t option to specify the file system


 It instructs the operating system that filesystem is ready to use and associate it with a particular point in the system's hierarchy. 
 Mounting will make files, directories and devices available to the users.
The mount command is used to make a device or file system accessible to the system, and then to connect 
its root directory to a mount point on the local file system.

Mounting is the act of associating a storage device to a particular location in the directory tree. For example, when the system boots, a particular storage device (commonly called the root partition) is associated with the root of the directory tree, i.e., that storage device is mounted on / (the root directory).

Let's say you now want to access files on a CD-ROM. You must mount the CD-ROM on a location in the directory tree (this may be done automatically when you insert the CD). Let's say the CD-ROM device is /dev/cdrom and the chosen mount point is /media/cdrom. The corresponding command is

mount /dev/cdrom /media/cdrom
After that command is run, a file whose location on the CD-ROM is /dir/file is now accessible on your system as /media/cdrom/dir/file. When you've finished using the CD, you run the command umount /dev/cdrom or umount /media/cdrom (both will work; typical desktop environments will do this when you click on the “eject” or ”safely remove” button).


======================================================================  STRATIS

Stratis is a local storage management tool. Manages pools of physical storage, helps simplify storage management
central component of Stratis is the storage pool, they are created from one or more disks or partitions, after created volumes can be
created on top of that

stratis is similar to lvm, but is easier to configure, deploy and manage
XFS file system
dont use XFS tools to manage stratis filesystem

sudo yum install stratisd stratis-cli

sudo systemctl enable --now stratisd.service

sudo stratis pool create my-pool /dev/vdc
can use one more block  just specify in the command 
sudo stratis pool create my-pool /dev/vdc /dev/vdd

sudo stratis pool list              
sudo stratis blockdev

create a filesystem
sudo stratis fs create my-pool myfs1                  myfs1 is the filesystem create on top of the pool
sudo stratis fs

sudo mkdir /mnt/mystratis
sudo vi /etc/fstab 
            /dev/stratis/my-pool/myfs1  /mnt/mystratis      xfs   x-systemd.requires=stratisd.service  0   0
sudo mount -a
sudo cp /home/username/file /mnt/mystratis

to add storage
sudo stratis pool add-data my-pool /dev/vdd
sudo stratis pool

filesystem snapshots
sudo stratis fs snapshot my-pool myfs1 myfs1-snapshot
sudo stratis fs   to check the snapshot

to recover from snapshot
rename the current statis file system 
sudo stratis fs rename my-pool myfs1 myfs1-old
next rename the snapshot to use the original filesystem name
sudo stratis fs rename my-pool myfs1-snapshot myfs1
sudo umount /mnt/mystratis
sudo mount /mnt/mystratis



====================================              Deploy, Configure, and Maintain Systems                ================================================


================================================================== CRONTAB  

cat /etc/crontab 
  can use  ',' this it will run multiple times like 15min and 45minutes -> 15,45
  can use '-', set hours to 2-4 2am,3am,4am
  can use '/', to specifies steps, every 4hours it will run
  Minute(0-59) Hour(0-23) Day_of_month(1-31) Month(1-12) Day_of_week(0-6) 0 Saturday 6 Sunday
  
crontab -e 
  edit he table of youyr current user
  
crontab -l   - to see user logged in cronjobs

to edit as sudo just add usdo at the front
sudo crontab -l   
sudo crontab -e

to add with different user
sudo crontab -e -u <username>

to remove cronjob
crontab -r
sudo crontab -r -u <username>

to run a sheel script in a cronjob dont add extension
makes executable
sudo chmod +rx /etc/cron.hourly/shellscript
if want run hourly (/etc/cron.hourly) just move to this dir, using sudo 

check the logs
sudo cat /var/log/cron

to send an email to user change the MAILTO=root

=================================         WORKING WITH PACKAGES MODULES STREAM                       ==============================================
=================================================================== modules   

stream allow to designate multiple versions of software packages to group together as modules
give greater flexibility and compatibility options
module is a set of packages that normally get installed together

available modules
sudo yum module list

install
sudo yum module  install nodejs
sudo yum module list --installed nodejs


different version  (/name-of-profile), can get the name in module list
sudo yum install module nodejs:14/development

to change the module 
sudo yum module reset nodejs
sudo yum module  install nodejs:16/development

Reset the module stream for the container-tools package as below:
sudo yum -y module reset container-tools
Then use yum to install version 3.0 of the container-tools package with below command:


sudo yum -y module install container-tools:3.0 --skip-broken --allowerasing --nobest




================================================================= /etc/fstab
 The fstab file typically lists all available disks and disk partitions, and indicates 
 how they are to be initialized or otherwise integrated into the overall system's file system


===================================================== how to check the filesystem type of a logical volume
lsblk -f
file -L -s /dev/mapper/d2-vmStorage






================================================================= RAID

 raid 0 - stripped, if we lose one disk all data will be lost
 raid 1 - redundant, mirror array, clone all data in all storages
 raid 5 - min 3 disk, has parity on each disk (used to rebuilt in lost of data), can lose 1 disc
 radi 6 - 4 discs, can lose 2 discs and still recovers data
 raid 10  - combination level 0 and 1
 
 sudo mdadm --create /dev/md0 --level=0 --raid-devices=3 /dev/vdc /dev/vdd /dev/vde
 sudo mkfs.ext4 /dev/md0
 sudo mdadm --stop /dev/md0    to stop or deactivate an array
 sudo mdadm --zero-superblock /dev/vdc /dev/vdd /dev/vde   to avoid the linux when bootup looking for arrays, if dont use this command linux will 
 built the array 
 sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/vdc /dev/vdd --spare-devices=1 /dev/vde      add spare disk in an array
 add/remove more disks on the array /dev/md0
 sudo mdadm --manage /dev/md0 --add /dev/vde 
 sudo mdadm --manage /dev/md0 --remove /dev/vde 
 cat /proc/mdstat             look the status of array
 
 
in /etc/fstab
/dev/md0 /raid xfs defaults 0 0
 
 
================================================================ Setup user and group disk quotas for filesystems

quotas is a simple way to limit how much storage space each user or group can use

sudo dnf install quota
sudo vim /etc/fstab
      /dev/vdb1 /mybackups xfs ro,noexec 0 2
      /dev/vdb1 /mybackups xfs defaults,usrquota,grpquota 0 2   ->add defaults,usrquota,grpquota
 then save the file and reboot
 sudo systemctl reboot
 sudo quotacheck --create-files --user --group /dev/vdb2       it will create to files in a filesystem aquota.group and aquota.user
 sudo quotaon /mnt    this is when you mount in /mnt
 
 create a file with a specific size
 fallocate --length 100M /path/dir/100Mfile
 
 to edit quotas to a user
 sudo edquota --user <username>
 sudo quota --user <username>    if the user use more than capacity, it will have a grace period wwith that the user wont be able to write any data
 sudo quota --edit-period        to edit the grace period, soft limit
 sudo edquta --group <group_name>
 
 
====================================================================================== VDO
Virtual Data Optimizer (VDO) is a block virtualization technology that provides transparent deduplication of data. 
By eliminating redundant chunks of data, VDO can greatly reduce actual used disk capacity.




=============================                  SELinux                   ==============================================================

SELinux context label for the sshd process
#
check the PID for the process
systemctl status <service>
ps -el | grep <service>

ps -Z <service_PID>


current SELinux mode on the system
#
getenforce


 SELinux file context for the file at /home/user
 ls -Z /home/user
 







Run the below command for default route information and save it to the file /home/bob/routes.txt:


ip route >> /home/bob/route.txt



To determine the PID for the sshd.service with below command:


systemctl status sshd.service

To get SELinux context label for the sshd process as below:

ps Z <PID>



Using an editor like vi edit the file /home/bob/context.txt and copy the line under LABEL from the previous command. Example as below:


system_u:system_r:sshd_t:s0-s0:c0.c1023




Determine the current SELinux mode on the system as save it to /home/bob/mode.txt:


getenforce > /home/bob/mode.txt




Determine the SELinux file context for the file at /home/bob/mystery as below:


ls -Z /home/bob/mystery

Save the file context label into /home/bob/file_context.txt using an editor like vi. For example, the context is similar to below text:


unconfined_u:object_r:user_home_t:s0




podman run -d --name my_web -p 1026:80 -v /home/bob/kodekloud:/usr/share/nginx/html:Z docker.io/library/nginx
podman run -d --name my_web -p 1026:80 -v /home/bob/kodekloud:/usr/share/nginx/html:Z docker.io/library/nginx



skopeo sync --src docker --dest dir docker.io/nginx:latest /home/bob/nginx
With Skopeo, you can inspect images on a remote registry without having to download the entire image with all its layers, 
making it a lightweight and modular solution for working with container images across different formats




tyyr
grep -r [A-Z,a-z] /opt/assets/


#!/bin/bash
echo "Exiting with code 150."
exit 150


#!/bin/bash
if [ -f "/opt/assets2/asset75" ]
then
  echo "File exists. Making a copy."
  mkdir /home/bob/backups/
  cp /opt/assets2/asset75 /home/bob/backups/
else
  echo "File not found."
fi


#!/bin/bash
for file in $(ls /opt/assets3/)
  do
    echo Read file $file. >> /home/bob/read_log.txt
  done
  
  
  /dev/md0 /raid xfs defaults,usrquota,grpquota 0 0





Create a single partition on /dev/vde that uses the entire available disk space and set the partition type vfat file system as below:


sudo fdisk /dev/vde


Follow the below instructions after running the command:


Choose n for new

Choose p for primary, and use the entire disk space available.

Choose t for type for the partition.

Choose Lto list all codes and choose b for W95 FAT32.

Choose w to write the changes and exit.




Format the partition /dev/vde1 with a 32-bit vfat filesystem with below command:


sudo mkfs.vfat -F 32 /dev/vde1


Create a mount point at /vfat/ as below:


sudo mkdir /vfat/


Using an editor such as vi, edit /etc/fstab and add an entry as follow:


/dev/vde1 /vfat vfat defaults 0 0


Mount the filesystem to the /vfat/ as below:


sudo mount -a




/dev/stratis/web_storage/web_storage1 /mnt/web_storage xfs x-systemd.requires=stratisd.service 0 0


/dev/mapper/compressed /mnt/compressed xfs _netdev,x-systemd.device-timeout=0,x-systemd.requires=vdo.service 0 0



sudo ip route del 10.0.0.101




Using an editor like vi write the below line in /home/bob/grubcommand.txt file:


autorelabel=1




Which command would you use to restore the default SELinux file contexts to all files in the hypothetical directory /home/bob/context?

Write your answer in the file /home/bob/restore.txt.

info_outline
Solution
Using an editor like vi save the below command in /home/bob/restore.txt file:


restorecon -R /home/bob/context/
or 
restorecon -r /home/bob/context/




Create the appropriate directory and any necessary parent directories to store rootless systemd service files for the user bob.

info_outline
Solution
Using below command create the appropriate directory to store rootless systemd service files for the user bob :


mkdir -p ~/.config/systemd/user/







